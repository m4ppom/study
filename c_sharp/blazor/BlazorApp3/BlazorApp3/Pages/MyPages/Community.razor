@page "/Data/Community"
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using BlazorApp3.Models


@inject ICommunityData _db

<h1>Community Page</h1>
<h3>Community</h3>
@if (community is null)
{
    <p><em>Loadddding~~~</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Title</th>
                <th>Text</th>
                <th>Email Address</th>
                <th>Created Date</th>
                <th>Answered</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var communit in community)
            {
                <tr>
                    <td>@communit.Name</td>
                    <td>@communit.Title</td>
                    <td>@communit.Text</td>
                    <td>@communit.EmailAddress</td>
                    <td>@communit.CreatedDate</td>
                    @if (@communit.Answered == 0)
                    {
                        <td>not Answered</td>
                    }
                    else
                    {
                        <td>Answered</td>
                    }

                <td>
                    <a class="oi oi-paperclip" href="/Data/Community/Edit/@communit.Id"></a>
                    <!--
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#updatingModal">
        수 정u
    </button>

    <div class="modal fade" id="updatingModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">게시글 수정</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>

                </div>
                <EditForm Model="@upCommunity">
                    <div class="modal-body" style="grid-auto-rows:inherit">

                        작성자 : @communit.Name<InputText id="Name" @bind-Value="upCommunity.Name" />
                        <br />
                        제목 : @communit.Title<InputText id="Title" @bind-Value="upCommunity.Title" />
                        <br />
                        내용 : @communit.Text<InputTextArea id="Text" @bind-Value="upCommunity.Text" />
                        <br />
                        메일 주소 : @communit.EmailAddress<InputText id="emailAddress" @bind-Value="upCommunity.EmailAddress" />

                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" name="submit" id="submit" @onclick="(() =>UpdateCommunity(communit.Id))" data-dismiss="modal"> 수정. </button>

                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

                    </div>
                </EditForm>
            </div>
        </div>
    </div>-->
                </td>
                    <td>
                        <a href="/Data/Community" style="color:red" class="oi oi-trash" @onclick="(() =>DeleteCommunity(communit.Id))" />
                        <!--<input type="button" class="oi oi-trash" aria-hidden="true" style="color:red" onclick="DeleteCommunity(@communit.Id)" />-->
                    </td>
                </tr>
            }
        </tbody>

    </table>

    <h4>Insert New</h4>


    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
        새 글 등록
    </button>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">게시글 등록</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <EditForm Model="@newCommunity" OnValidSubmit="@InsertCommunity">
                    <div class="modal-body" style="grid-auto-rows:inherit">

                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        작성자 : <InputText id="Name" @bind-Value="newCommunity.Name" />
                        <br />
                        제목 : <InputText id="Title" @bind-Value="newCommunity.Title" />
                        <br />
                        내용 : <InputTextArea id="Text" @bind-Value="newCommunity.Text" />
                        <br />
                        메일 주소 :<InputText id="emailAddress" @bind-Value="newCommunity.EmailAddress" />
                        <button type="submit" class="btn btn-primary" href="#"> Add! </button>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" name="AddSubmit" id="AddSubmit"> Add! </button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </EditForm>


            </div>
        </div>
    </div>



}
@code {
    private List<CommunityModel> community;
    private DisplayCommunityModel newCommunity = new DisplayCommunityModel();
    private DisplayCommunityModel upCommunity = new DisplayCommunityModel();
    private DeleteCommunityModel delCommunity = new DeleteCommunityModel();

    [Parameter]
    public EventCallback<MouseEventArgs> Onclick { get; set; }

    protected override async Task OnInitializedAsync()
    {
        community = await _db.GetCommunity();
    }

    private async Task InsertCommunity()
    {
        CommunityModel C = new CommunityModel
        {
            Name = newCommunity.Name,
            Title = newCommunity.Title,
            Text = newCommunity.Text,
            EmailAddress = newCommunity.EmailAddress
        };
        await _db.InsertCommunity(C);

        community.Add(C);
        newCommunity = new DisplayCommunityModel();
    }


    private async Task DeleteCommunity(int num)
    {
        CommunityModel D = new CommunityModel
        {
            Id = num
            // Id = delCommunity.Id
        };
        await _db.DeleteCommunity(D);
        community = await _db.GetCommunity();
    }
    /*
    private async Task UpdateCommunity(int num)
    {
        CommunityModel E = new CommunityModel
        {
            Name = upCommunity.Name,
            Title = upCommunity.Title,
            Text = upCommunity.Text,
            EmailAddress = upCommunity.EmailAddress,
            Id = num
        };
        await _db.UpdateCommunity(E);
        community = await _db.GetCommunity();
        //community.Add(C);
        upCommunity = new DisplayCommunityModel();
    }
    */
}
